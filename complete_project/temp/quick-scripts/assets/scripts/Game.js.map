{"version":3,"sources":["Game.js"],"names":["Test","require","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","testPrefab","maxStarDuration","minStarDuration","ground","Node","player","test","scoreDisplay","Label","scoreAudio","url","AudioClip","far_bg","far_speed","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","spawnNewTestPrefeb","score","setInputControl","fixBgPos","bg1","bg2","x","bg1BoundingBox","getBoundingBox","setPosition","xMax","yMin","bgMove","bgList","speed","index","length","element","checkBgReset","winSize","director","getWinSize","first_xMax","console","log","preFirstBg","shift","push","curFirstBg","newStar","instantiate","node","addChild","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","newTestPrefab","getNewTestPrefebPosition","update","dt","gainScore","string","toString","audioEngine","playEffect","gameOver","stopAllActions","loadScene","jump","YSpeed","a","on","event","startTime","Date","getTime","lastTime"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var Test = require(\"test\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        testPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        test: {\r\n            default: null,\r\n            type: Test\r\n        },\r\n\r\n        // score label 的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\t\tfar_bg:[cc.Node],  \r\n        far_speed:0.2,  \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        this.spawnNewTestPrefeb();\r\n        // 初始化计分\r\n        this.score = 0;\r\n        this.setInputControl();\r\n\t\tthis.fixBgPos(this.far_bg[0],this.far_bg[1]);  \r\n        \r\n\t\t\r\n    },\r\n    fixBgPos:function(bg1,bg2){\r\n       bg1.x = 0;  \r\n       //利用前一张图片的边框大小设置下一张图片的位置  \r\n       var bg1BoundingBox = bg1.getBoundingBox();  \r\n       bg2.setPosition(bg1BoundingBox.xMax,bg1BoundingBox.yMin)  \r\n   },  \r\n\r\n   bgMove:function(bgList,speed){  \r\n       for(var index = 0; index < bgList.length; index++){  \r\n           var element = bgList[index];  \r\n           element.x -= speed;  \r\n       }},\r\n\t//检查是否要重置位置  \r\n    checkBgReset:function(bgList){  \r\n        var winSize = cc.director.getWinSize();  \r\n        var first_xMax = bgList[0].getBoundingBox().xMax;\r\n        if(first_xMax<=0){\r\n            console.log('xMax<0')\r\n            var preFirstBg = bgList.shift();  \r\n            bgList.push(preFirstBg);  \r\n            var curFirstBg = bgList[0];  \r\n            preFirstBg.x = curFirstBg.getBoundingBox().xMax;  \r\n        }  \r\n    } , \r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this;\r\n        // 重置计时器\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n       \r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n    spawnNewTestPrefeb: function() {\r\n        console.log('testPrefeb')\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newTestPrefab = cc.instantiate(this.testPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newTestPrefab);\r\n        // 为星星设置一个随机位置\r\n        newTestPrefab.setPosition(this.getNewTestPrefebPosition());\r\n    },\r\n    getNewTestPrefebPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 20;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n\r\n    // called every frame\r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n           // this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n\t\t//移动背景\r\n\t\tthis.bgMove(this.far_bg,this.far_speed);  \r\n        this.checkBgReset(this.far_bg);  \r\n    },\r\n\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    jump: function (dt){\r\n        var player = this.player.getComponent('Player')\r\n        player.YSpeed+=dt*player.a\r\n        console.log(player.YSpeed)\r\n\t},\r\n\tsetInputControl: function () {//\r\n        // touch input\r\n        this.node.on('mousedown', function (event) {//this.node调用的是节点上才有用?\r\n           console.log('Mouse down');\r\n\t\t   this.startTime = new Date().getTime()\r\n        }, this);\r\n\r\n\t\tthis.node.on('mouseup', function (event) {\r\n\t\t   var lastTime = (new Date().getTime()-this.startTime)/1000\r\n\t\t   console.log(lastTime);\r\n\t\t   this.jump(lastTime)\r\n        }, this);}\r\n});\r\n"]}
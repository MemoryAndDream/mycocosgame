{"version":3,"sources":["Game.js"],"names":["Test","require","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","test","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","setInputControl","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","update","dt","gameOver","gainScore","string","toString","audioEngine","playEffect","stopAllActions","director","loadScene","jump","YSpeed","a","console","log","on","event","startTime","Date","getTime","lastTime"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var Test = require(\"test\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        test: {\n            default: null,\n            type: Test\n        },\n\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n        this.setInputControl();\n\t\t\n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 将 Game 组件的实例传入星星组件\n        newStar.getComponent('Star').game = this;\n        // 重置计时器\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // 返回星星坐标\n        return cc.p(randX, randY);\n    },\n\n    // called every frame\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    },\n    jump: function (dt){\n        this.test.YSpeed+=dt*this.test.a\n        console.log(this.test.YSpeed)\n\t},\n\tsetInputControl: function () {//\n\t    console.log('input control')\n        // touch input\n        this.node.on('mousedown', function (event) {//this.node调用的是节点上才有用\n           console.log('Mouse down');\n\t\t   this.startTime = new Date().getTime()\n        }, this);\n\n\t\tthis.node.on('mouseup', function (event) {\n           console.log('mouseup');\n\t\t   var lastTime = (new Date().getTime()-this.startTime)/1000\n\t\t   console.log(lastTime);\n\t\t   this.jump(lastTime)\n        }, this);}\n});\n"]}